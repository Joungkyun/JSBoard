##### JSBOARD + OOPS administartion Center #################################
#
#  Original Developer	: 김병찬 <redhands@linux.sarang.net>
#  Source Disturibute	: 김정균 <admin@oops.org>
#
#  CVS Server 관리	: 김영민 <blhole@hotmail.com>
#  Homepage 공간 제공	: 권순선 <http://www.kldp.org>
#  Special Thanks	: 임은재 <eunjea@kldp.org>
#			: 차경묵 <dimanche@dimanche.co.kr>
#			: 방창현 <winchild@kldp.org>
#
#############################################################################
#
#                              Quick Installation in JSBoard 1.1 v0.8
#
#############################################################################


작성 : 김정균 <admin@oops.org>
일시 : 2000.9.9

이 문서는 JSBoard 1.1 version의 수동 설치를 위해 제공을 한다.
이 문서로 인한 피해나 JSBoard의 사용으로 인한 피해에 대해서는
아무런 책임을 질수 없으니 신중하게 판단하고 설치를 시도하도록
하기를 바란다.

========================   주의   ========================

0.7 이하 버젼과 DB 구조체와 SQL query의 형식이 변경이
되었으므로 무조건 덮어 씌우지 말기 바란다.

!!!!!!!!!!!!!
Linux, FreeBSD 이외의 OS에서 설치시에는 꼭
jsboard/README.OTHERS.OS 문서를 읽어 보고 설치를 시작
해야 한다.

==========================================================

**** 목 차 ****

  1. 사용환경
    1-1. exec() 함수 test
    1-2. MySQL 함수 test
    1-3. web server 설정
  2. JSBoard 설치
    2-1. MySQL setting
    2-2. 설정 파일 셋팅하기
  3. JSBoard 운영
  4. UPGRADE
    4-1. 0.8 또는 1.0.x version에서의 upgrade
    4-2. 0.7 이하 버젼에서의 upgrade
      4-2-1. 임은재의 소스를 이용하는 방법
  5. Bug report

***************


1. 사용환경

  Linux 가 설치되어 있는 Server (다른 NOS에서는 어떠한 문제가 발생할지
  알수가 없음. DIY를 해 보기 바람)
  
  apache 1.3.x 이상
  
  MySQL 3.22.30 이상 (RPM 설치 권장 - ftp://ftp.oops.org)에서 받을수 있음
  (3.23.x 인 alpha version에서 호환성 문제는 검증된바 없음)
  
  PHP-4.0.0 이상(RPM 설치 권장 - ftp://ftp.oops.org)에서 받을수 있음
  JSBoard 1.1은 PHP4 기반하에서 정상작동을 하며, compile 시에 Session 기능을
  빼면 절대 안된다.

  * 체크 사항 *

  서버의 php가 exec() 함수와 MySQL 함수가 지원되는지 확인한다.

  1-1. exec() 함수 test

    일단 다음과 같은 파일을 하나 만든다. test.php3라고 칭하겠다.
    다음의 예제는 linux상에서만 정확히 작동을 한다. 다른 Platform에서는
    알아서 제대로 작동을 하는지 확인을 해 보기 바란다.

    <?php
    echo("## exec() 함수 테스트  ##<p><br>\n\n");
    exec("echo \"exec()함수가 정상 작동 합니다\"", $test);

    echo $test[0];
    ?>

    파일을 만든 다음 웹상에서 위의 파일을 호출했을 경우

    -------------------------------------------------
    ## exec() 함수 테스트 ##

    exec()함수가 정상 작동 합니다
    -------------------------------------------------

    가 출력이 되어져야 한다.

  1-2. MySQL 함수 test

    info.php3 라는 파일을 아래와 같은 내용으로 생성한다.

    <?php
    phpinfo();
    ?>

    그리고 웹상에서 호출을 했을 경우 MySQL에 대한정보가 있는지 확인한다.
    단 주의 할것은 MySQL의 정보가 있더라도 php 설치시에 mysql의 경로를
    지정해 준것과 실제 MySQL의 경로가 틀릴 경우에는 접속 에러가 발생할수
    있다. 가장 대표적인 경우가 PHP는 rpm으로 설치를 하고 MySQL은 source
    compile을 했을 경우이다. PHP를 rpm으로 설치를 할경우에는 거의 대부분이
    /usr/lib/mysql 에 위치하는 경우이기 때문이다.

    위의 정보가 존재를 하는데도 에러가 발생한다면 

    <?
    $mcheck = mysql_connect("127.0.0.1", "root", "$passwd");
    또는
    $mcheck = mysql_connect("localhost", "root", "$passwd");

    if ($mcheck) echo "MySQL 접속에 성공했습니다.";
    else echo "MySQL 접속에 실패를 했습니다.
    ?>

    라는 code를 만들어서 웹상에서 mysql에 접속을 하여 위의 에러 메세지중
    어느 것이 나오는지를 확인해 보도록 한다.

  1-3. web server 설정

    jsboard의 index file은 index.php3 이다 그러므로 httpd.conf 에서
    DirectoryIndex 지시자에 index.php3를 추가해 주도록 한다. 또한 ph file
    들의 보안을 위해서 httpd.conf 의

    AddType application/x-httpd-php .php .php3

    설정에 .ph 를 추가해 주도록 한다.

2. JSBoard 설치

    JSBoard는 웹상에서 관리를 하도록 되어 있기 때문에 웹서버가 작동하는
    nobody의 권한으로 쓰기 권한을 가지고 있어야만 한다는 것을 명심해야 한다.
    즉 permission 설정에 주의를 기해야 한다는 것이다!

  2-1 MySQL setting

    MySQL의 처음 셋팅 하는 사람을 기준으로 설명을 한다. 이미 셋팅이 되어
    있는 사람들은 적당히 보고선 자신이 이미 되어 있는 부분은 뛰어 넘도록 한다.

    계정 사용자들의 경우에는 이 과정을 생략하며, 서버 관리자에게 MySQL의
    계정과 DB구조체만 등록해 달라고 요청을 하면 된다. 즉 DB user name,
    DB name, DB password 를 알려 달라고 해야 한다.


    . 일단 MySQL을 설치를 하도록 한다. MySQL은 RPM 패키지로도 구할수 있다.

      ftp://ftp.opos.org/pub/Linux/Redhat/RPMS
      ftp://linux.sarang.net/pub/MySQL

      linux 배포본에서 제공하는 php rpm을 사용하는 사람들의 경우에는 php를 rpm
      packaging할때 mysql의 경로가 어디로 지정을 했는냐에 따라 달라질수 있으므로
      될수 있으면 A+P+M은 같은 곳에서 패키징 한것을 사용한 것이 좋다.

      소스 컴파일의 경우에는 방법을 생략한다.

    . 설치를 마쳤으면 root계정의 패스워드를 지정한다.

      [root@home /public_html]# mysql mysql 

      Reading table information for completion of table and column names 
      You can turn off this feature to get a quicker startup with -A 

      Welcome to the MySQL monitor. Commands end with; or \g. 
      Your MySQL connection id is 1961 to server version: 3.22.20a-log 

      Type 'help' for help. 
      mysql> update user set password = password('루트패스워드')
           > where user = 'root';
      Query OK, 1 row affected (0.00 sec) 

      mysql> flush privileges;
      Query OK, 0 rows affected (0.00 sec)

      root password 를 지정한 후에 JSBoard에서 사용할 DB 구조체와 사용자
      설정을 하도록 한다. 등록을 하려는 

      USER이름을		"사용자", 
      DB이름을			"디비",
      패스워드를		"패스워드" 

      로 가정을 한다. 적절히 대입을 해 줘라. 단 중요한
      것은 이것들을 한글로 하지는 마라. 먼 일이 벌어지기를 기대한다면 한글로
      해도 상관이 없다. 여기서는 단지 보기 쉽게 하기 위해서 한글로 하는 것
      뿐이다.

      mysql> CREATE database 디비;
      Query OK, 0 rows affected (0.00 sec)

      mysql> insert into user (Host,User,Password)
           > values('localhost','사용자',password('패스워드'));
      Query OK, 0 rows affected (0.00 sec)

      mysql> insert into db values
           > ('localhost','디비','사용자','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y');
      Query OK, 0 rows affected (0.00 sec)

      이 명령이 에러가 발생한다면 db table의 컬럼이 아래와 같은지 살펴 보기 바란다.

      mysql> desc db;
      +-----------------+---------------+------+-----+---------+-------+
      | Field           | Type          | Null | Key | Default | Extra |
      +-----------------+---------------+------+-----+---------+-------+
      | Host            | char(60)      |      | PRI |         |       |
      | Db              | char(32)      |      | PRI |         |       |
      | User            | char(16)      |      | PRI |         |       |
      | Select_priv     | enum('N','Y') |      |     | N       |       |
      | Insert_priv     | enum('N','Y') |      |     | N       |       |
      | Update_priv     | enum('N','Y') |      |     | N       |       |
      | Delete_priv     | enum('N','Y') |      |     | N       |       |
      | Create_priv     | enum('N','Y') |      |     | N       |       |
      | Drop_priv       | enum('N','Y') |      |     | N       |       |
      | Grant_priv      | enum('N','Y') |      |     | N       |       |
      | References_priv | enum('N','Y') |      |     | N       |       |
      | Index_priv      | enum('N','Y') |      |     | N       |       |
      | Alter_priv      | enum('N','Y') |      |     | N       |       |
      +-----------------+---------------+------+-----+---------+-------+
      13 rows in set (0.00 sec)

      칼럼row가 위와 같이 13이 아니라면 Host, Db, User를 뺀 나머지 칼럼수와
      위의 mysql query의 "Y"값 수를 맞춰 줘야 한다. 나의 예상으로는 MySQL
      3.23.x alpha version들과 3.22.25 이하 버젼들이 틀릴수도 있을 것이다.

      mysql> quit
      Bye

      이미 설정이 되어 있는 사람들은 이 단계는 그냥 건너 뛰면 된다.

  2-2 설정 파일 셋팅하기

    먼저 다운로드 받은 파일의 압축을 설치를 원하는 디렉토리에서 압축을
    풀도록 한다.

    $ tar xvfpz jsboard-version.tar.gz

    압축을 풀면 jsboard-version 이라는 디렉토리가 생성이 된다.

    jsboard/Installer/SQL 로 이동을 하여 다음의 명령을 실행을 하여
    jsboard에서 사용을 할 table 구조체를 만들도록 한다. 위에서 등록한 MySQL
    정보들을 알아야 한다.

    $ cd jsboard-version/Installer/SQL
    $ mysql -u 사용자 -p 디비 < mysql_ostype.sql
    Enter password: 패스워드

    Linux 사용자들은 mysql_linux.sql 을 이용하여 FreeBSD 사용자 들은
    mysql_freebsd.sql을 이용하도록 한다.

    table 구조체를 만들었으면 다음 설정 파일들을 위치 시키고 그 파일들의
    퍼미션을 조정하도록 한다. jsboard/Installer/script 에서 root의 권한을
    가지고 설치를 할수 있다면

    $ ./root.sh
    ===================================================
     Scripted By JoungKyun Kim <admin@oops.org>
     JSBoard Permission Configurations v1.0
    ===================================================

    ## Operating System : Redhat
    ## Httpd Group : nobody

    Is right follow information? [Y/N](default Y) : y <--Enter

    DONE!!!!
    $

    root.sh를 실행을 하면 같이 수행이 된다. 만약 위에서 HTTPD의 그룹이
    nobody가 아니라면 (debian은 보통 www-data로 되어 있다) n 또는 N을
    넣고 그룹 이름을 다시 지정하면 된다. 아래와 같은 문구가 나올것이다.

    Input Ur httpd group :


    혹은 계정 사용자라면

    $ ./account.sh

    명령을 실행하도록 한다. 또한 account user의 권한으로 설치를 하려면
    먼저 주의 할 것이 있다. 즉 db의 password를 가지고 있는 파일을 보호해야
    한다. 이를 위해서는 root의 권한을 가진 관리자에게 일단 부탁을 해야 할
    일이 있다. 바로
    
    jsbaord/config/global.ph,
    jsboard/config/spma_list.ph,
    jsboard/admin/include/config.ph
    
    에 대한 group 소유권을 nobody로 지정해 달라고 해야 한다(debian 사용자
    라면 www-data로 해야 할것이고 다른 OS는 모르겠다). 즉 

    $ chgrp nobody jsboard/config/global.ph (root가 실행해야 하는 명령)
    $ chgrp nobody jsboard/config/spam_list.txt (root가 실행해야 하는 명령)
    $ chgrp nobody jsboard/admin/include/config.ph (root가 실행해야 하는 명령)

    명령을 실행해 달라고 해야 한다. 이를 시행하면 아래와 같이 소유권을 가지게
    된다. (Debian의 경우에는 nobody가 아니라 www-data가 되어야 한다)

    -rx-rx----    accountname    nobody     config/global.ph
    -rx-rx----    accountname    nobody     config/spam_list.txt
    -rx-rx----    accountname    nobody     admin/include/config.ph

    단 주의 할것은 account user의 권한으로 설치시에는 보안의 문제성이 대두
    될수 있으니 home directory의 권한을 꼭 711로 해야한다.

    위의 두 script file은 간단하게 mv, chown, chmod 등의 shell 명령어로
    이루어져 있으니 파일을 편집기로 열어서 보면 어느곳에 어떠한 소유권과 권한
    으로 설정 파일들이 위치해야 하는지 쉽게 파악할수 있을 것이다.

    위의 명령을 실행을 하면 설정 파일들이 각각의 위치로 자리를 잡게 된다.

    다음 jsboard/config/ 로 이동을 하여 global.ph 에서 DB의 정보를 수정을 한다.

    /***************************************************************************
      데이타베이스 관련 설정
    ***************************************************************************/
    $db[server] = ":/var/lib/mysql/mysql.sock";	// 서버 주소
    $db[user]   = "";				// 사용자
    $db[pass]   = "";				// 패스워드
    $db[name]   = "";				// 이름

    위의 부분을 적절히 수정해 주면 된다. DB서버가 외부에 존재 할 경우에는
    ":/var/lib/mysql/mysql.sock" 부분을 DB서버의 ip address로 대체를 하면
    될것이다 (아직 test는 안해 봤다 ^^;;). 그래고 mysql을 source compile한
    사람들도 mysql.sock file의 경로를 적당히 수정해 주면 된다.

3. JSBoard 운영

  JSBoard에는 관리자 기능이 존재 한다. 이 기능은 JSBoard 와는 별도의 코드로서
  admin/License 를 읽어 보고 동의할 경우에만 사용이 가능하다.

  설치가 완료 되었다면 이제 웹브라우져에서 접속을 해 보도록 한다. 우선 전체
  설정 부터 살펴 보도록 한다.

  http://domain.com/jsboard/admin

  으로 접속을 하도록 한다. 그러면 login 창이 뜰것이다. JSBoard의 기본 패스워드는
  모두 초기값으로는 "0000" 으로 되어 있으니 이 패스워드로 접속을 하도록 한다.

  OOPS Administration Center v1.7 에서 달라진 기능은 일단 종전에 JSBoard에서
  사용하는 DB에 JSboard 에서 사용하지 않는 table이 있을 경우 에러메세지가 출
  력 되는 현상이 있었으나 1.7에서는 JSBoard에서 사용하지 않는 table이 존재할
  경우 설정 버튼 대신 "Not JSBoard table" 이라는 메시지를 출력하게 끔 변경이
  되어 있다.

4. UPGRADE

  4-1. 0.8 이상 1.0.x 이하 version에서의 upgrade

    0.8 이상 1.0.x 이하 version 에서의 upgrade 무척 단순하다. 즉, 1.1의
    소스를 받아서 덮어 씌어 주기만 하면 된다. 그리고 Installer/ad_script에
    보면 allow_browser.txt.orig 라는 파일이 있다 이걸 jsbaord/config 에
    allow_browser.txt 로 copy를 한다. 다음 jsbaord/Installer/script 에서
    root사용자의 경우에는 root_p.sh 를 실행해 주면 되며, 계정 유저의 경우
    에는 account_p.sh를 실행해 주기만 하면 된다.

    단 주의 할것은.... PHP3 사용자들은 PHP4로 update를 해 줘야만 한다.!!!!!!

  4-2. 0.7 이하 버젼에서의 upgrade

    현재로서는 0.6 안정 버젼과 0.7 버젼에서만 upgrade가 지원이 된다. 그 이전
    버젼을 사용하는 user들은 최소한 0.6 안정 버젼으로 upgrade를 한후에
    upgrade를 할수가 있다.

    일단 0.7을 포함한 이전 버젼에서 upgrade를 하기 위해서는 방창현님과
    임은재 님이 올려 주신 소스를 이용하여 별도의 작업을 해 주어야 한다.
    하지만 현재 방창현님의 소스에서는 버그가 발견이 되어 있으므로 임은재
    님이 올려 주신 적수님의 스크립트를 jsboard에 맞게 수정한 스크립트를
    이용하는 방법을 설명하도록 한다. 이 스크립트는 http://jsboard.kldp.org
    의 자료실에서 구할수 있다.

    주의 할것은 upgrade를 마치고 게시판을 보면 쓰기 읽기 수정 삭제 권한이
    없다는 메세지가 나올수 있다. 이는 각 게시판의 설정들이 초기화가 되었
    기 때문이니 각 게시판 관리자로 들어가서 셋팅을 다시 해 주면 된다.

    * 임은재님의 스크립트를 행할때 timeout error가 발생할 경우도 있다.
    * 이는 php.ini 에서 실행 제한 시간이 30초로 지정이 되어 있기 때문이니
    * 이 시간을 늘려 주고선 apache를 재실행한후 다시 한번 실행해 보기
    * 바란다. 에러가 난다고 겁먹지 말고 어떠한 에러인지를 잘보고 해당
    * 에러면 수행하기 바란다.

    4-2-1. 임은재님의 스크립트를 이용한 upgrade

      코드 작성 : 김병찬
      코드 수정 : 임은재
      문서 작성 : 김정균

      http://jsboard.kldp.org/bbs/read.php3?table=bbs_download&no=30&page=1
      에서 convert.phps를 다운 받은 후 이 파일을 convert.php3 또는
      convert.php로 변경을 하도록 한다. 다음 이 파일을 웹상에서 접근을 할수
      있는 디렉토리로 이동을 한다. convert.php3를 에디터로 열은 다음 7번째
      라인의  $new_fiile = "../tmp/$table.sql"; 부분에서 ../tmp 부분이
      nobody에게 쓰기 권한이 있는지 확인을 한다. 보통 /tmp/$table.sql 로
      지정을 하는 것이 제일 무난할듯 하다. 그리고 $new_file 바로 상단에
      user, pass, name을 지정해 주도록 한다.

      위의 내용을 예를 들어서 설명한다면 일단 web root를 /home/httpd/html
      이라 가정을 한다. 그리고 /home/httpd/html/convert 라는 디렉토리를
      생성한다. convert를 생성한후 nobody가 쓰기를 할수 있게 하기 위하여

      chmod 777 convert

      명령을 실행한다. 다음 다운로드 받은 소스나 해당 소스를 convert에
      convert.php3 라는 이름으로 파일을 만든다. 다음 convert.php3 에서
      다음의 부분을 수정하도록 한다.

      $db = array('server'  => 'localhost',
                  'user'    => 'db user name을 넣는다',
                  'pass'    =>	'db password를 넣는다',
                  'name'    =>	'db 이름을 넣는다' );

      $new_file = "./$table.sql"; // 현재 디렉토리를 지정한다.

      와 같이 수정을 해 주면 된다.

      만약 자신의 MySQL의 버젼이 3.22.21 이하 버젼이라면 소스의 제일 하단에
      두줄을 아래와 같이 수정을 해준다.

      ALTER TABLE $table MODIFY idx int(6) DEFAULT '0' NOT NULL;
      ALTER TABLE $table MODIFY no int(6) DEFAULT '0' NOT NULL AUTO_INCREMENT;\n");

      부분을 아래와 같이 수정을 하는 것이다.

      ALTER TABLE $table CHANGE idx idx int(6) DEFAULT '0' NOT NULL; 
      ALTER TABLE $table CHANGE no no int(6) DEFAULT '0' NOT NULL AUTO_INCREMENT; 

      다음 웹상에서 변환을 할 게시판 이름을 aaa 라고 한다면 다음의 경로를
      호출한다.

      http://domain.com/convert/convert.php3?table=aaa

      스크립트가 완료한 후 위의 $new_file 에 지정한 패스에 aaa.sql 이라는
      파일이 생성이 되어 있을 것이다.

      다음 기존의 db 를 변경하기 전에 만약의 사태에 대비를 하여 기존의 DB를 백업
      하도록 한다. 다음의 명령을 이용한다.

      mysqldump -u USER -p DBname > backup.sql

      위의 명령을 실행을 하면 backup.sql 이라는 이름으로 DB내용이 백업이 된다.
      나중에 복구를 하고 싶으면

      mysql -u USER -p DBname < backup.sql

      로 복원을 할수가 있다. 일단 백업을 했으면 이제 생성된 $table.sql 파일들을
      이용하여 DB를 변환을 하도록 한다. 아래의 명령을 실행을 하자. (아래는 aaa
      라는 게시판을 변환하는 과정이다. 게시판이 여러개면 이 과정을 계속 반복
      해 주도록 한다)
      
      mysql -u USER -p DBname < aaa.sql

      아무런 메세지가 나오지 않고 prompt가 떨어지면 변환에 성공을 한것이다.
      DB작업이 완료가 되었으면 이제 게시판 작업을 한다.

      역시 기존의 게시판과 겹치지 않게 jsboard를 풀어 놓은 다음 각
      게시판 에서 사용을 하는 include/게시판이름 을 jsboard-new/data 에
      copy를 한다. 그리고 jsboard-new/Installer/script 에서 root.sh나
      account.sh를 이용하여 설정 파일들을 위치 시키고 퍼미션을 조정한 후
      jsboard-new/config/global.ph 에 DB정보를 넣어 준다. 다음 
      http://domain.com/jsboard-new/admin 으로 접속을 하여 비밀 번호
      "0000"을 이용하여 로그인 한후 전체 설정과 각 게시판 설정을 해 주면
      된다.

5. Bug report

  버그를 발견할 경우에는 http://jsboard.kldp.org/bbs/list.php3?table=bbs_upgrade 에
  리포팅을 해 주면 감사하겠다


